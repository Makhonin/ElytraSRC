// -*- tab-width: 4; Mode: C++; c-basic-offset: 4; indent-tabs-mode: nil -*-

//
// Simple test for the AP_InertialSensor driver.
//

#include <stdarg.h>
#include <AP_Common.h>
#include <AP_Progmem.h>
#include <AP_HAL.h>
#include <AP_HAL_SITL.h>
#include <AP_HAL_Linux.h>
#include <AP_HAL_Empty.h>
#include <AP_Math.h>

//const AP_HAL::HAL& hal = AP_HAL_BOARD_DRIVER;

uint32_t timer;

#define PCA9685_I2C_ADRESS 0x38
#define PCA9685_I2C_BASE_ADDRESS 0x40
#define PCA9685_MODE1 0x00 // location for Mode1 register address
#define PCA9685_MODE2 0x01 // location for Mode2 reigster address
#define PCA9685_LED0 0x06 // location for start of LED0 registers

const AP_HAL::HAL& hal = AP_HAL_BOARD_DRIVER;

void setup(void)
{
    
    hal.console->println("Elytra test");
    hal.console->println("Initialising barometer...");
	
    hal.scheduler->delay(100);
    
		hal.console->println("Initialisation complete.");
    hal.scheduler->delay(1000);
    timer = hal.scheduler->micros();
    hal.console->println("Started.");
}

void loop(void)
{
    if((hal.scheduler->micros()- timer) > 100000L)
    {
        timer = hal.scheduler->micros();
        hal.console->println("Ok.");
    } else {
	    hal.scheduler->delay(1);
    }
}

AP_HAL_MAIN();
